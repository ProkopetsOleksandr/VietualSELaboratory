@using Domain.RDBMS.Entities
@using VietualSELaboratory.Utils
@using ReflectionIT.Mvc.Paging

@model VietualSELaboratory.ViewModel.ShowTasksViewModel
@{
    ViewData["Title"] = "Index";
}




<input type="text" class="mainLoginInput" id="search_input" placeholder="&#61442; Search for a tasks">

<input type="button" id="filter_button" value="Filter">

@if (User.IsInRole(Constants.ApplicationRoles.Teacher))
{
    <a href="/Task/Create" class="btn btn-link">Add new task</a>
}

<div id="task_list">
    <table id="tasks_table">
        <tr>
            <th>Name</th>
            <th>Level</th>
            <th>Description</th>
            <th>Status</th>
            <th>Actions</th>
        </tr>
        @foreach (var item in Model.Exercises)
        {
            <tr>
                <td style="color: #323C47;">@item.Name</td>
                <td>@item.LevelId</td>
                <td>@item.Description</td>

                @if (Model.CompletedTasksIds.Contains(item.Id))
                {
                    <td>Completed</td>
                    <td><a class="btn btn-primary" href="/Task/View?taskId=@item.Id">View</a></td>
                }
                else
                {
                    <td>New</td>
                    <td>
                        <a class="btn btn-primary" href="/Task/View?taskId=@item.Id">View</a>
                        <a class="btn btn-primary" href="/Task/Execute?taskId=@item.Id">Execute</a>
                    </td>
                }
            </tr>
        }
    </table>
</div>

<nav aria-label="Tasks paging">
    @await this.Component.InvokeAsync("Pager", new { pagingList = this.Model.Exercises })
</nav>